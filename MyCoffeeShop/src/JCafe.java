import java.awt.Desktop;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author chrysovalantistsiartas
 */
public class JCafe extends javax.swing.JFrame {

    /**
     * Creates new form JCafe
     */
    public JCafe() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    DefaultTableModel model;
    String item;
    double price;
    DecimalFormat decimalFormat = new DecimalFormat("0.00");
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        resetbutton = new javax.swing.JButton();
        placeorder = new javax.swing.JButton();
        txttotal = new javax.swing.JTextField();
        txtqty = new javax.swing.JSpinner();
        remover = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        sxolia = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        addbutton = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        nosugar = new javax.swing.JRadioButton();
        littlesugar = new javax.swing.JRadioButton();
        halfsugar = new javax.swing.JRadioButton();
        sweet = new javax.swing.JRadioButton();
        caramel = new javax.swing.JRadioButton();
        cinnamon = new javax.swing.JRadioButton();
        vanilla = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("COFFEE SHOP ORDERING SYSTEM\n");
        setBackground(new java.awt.Color(204, 51, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jButton4.setBackground(new java.awt.Color(102, 0, 102));
        jButton4.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(51, 255, 0));
        jButton4.setText("ORDERS");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        resetbutton.setBackground(new java.awt.Color(102, 0, 102));
        resetbutton.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        resetbutton.setForeground(new java.awt.Color(51, 255, 0));
        resetbutton.setText("RESET");
        resetbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbuttonActionPerformed(evt);
            }
        });

        placeorder.setBackground(new java.awt.Color(102, 0, 102));
        placeorder.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        placeorder.setForeground(new java.awt.Color(51, 255, 0));
        placeorder.setText("CONFIRM");
        placeorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeorderActionPerformed(evt);
            }
        });

        txttotal.setEditable(false);
        txttotal.setBackground(new java.awt.Color(102, 102, 0));
        txttotal.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        txttotal.setForeground(new java.awt.Color(255, 255, 255));
        txttotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalActionPerformed(evt);
            }
        });

        txtqty.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtqty.setValue(1);

        remover.setBackground(new java.awt.Color(255, 51, 51));
        remover.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        remover.setText("Remove");
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 204));
        jLabel5.setText("Total:");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 2, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 255, 255));
        jLabel4.setText("Comments:");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("Options:");

        sxolia.setBackground(new java.awt.Color(153, 153, 153));
        sxolia.setColumns(20);
        sxolia.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        sxolia.setForeground(new java.awt.Color(204, 204, 255));
        sxolia.setRows(5);
        jScrollPane3.setViewportView(sxolia);

        jTable1.setBackground(new java.awt.Color(0, 102, 102));
        jTable1.setForeground(new java.awt.Color(204, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Price", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel2.setBackground(new java.awt.Color(255, 204, 102));
        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 2, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("Menu");

        addbutton.setBackground(new java.awt.Color(0, 255, 0));
        addbutton.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        addbutton.setText("Add");
        addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        nosugar.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        nosugar.setText("No Sugar");
        nosugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nosugarActionPerformed(evt);
            }
        });

        littlesugar.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        littlesugar.setText("Little Sugar");

        halfsugar.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        halfsugar.setText("Half Sugar");
        halfsugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halfsugarActionPerformed(evt);
            }
        });

        sweet.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        sweet.setText("Sweet");

        caramel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        caramel.setText("Caramel");
        caramel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caramelActionPerformed(evt);
            }
        });

        cinnamon.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        cinnamon.setText("Cinnamon");

        vanilla.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        vanilla.setText("Vanilla");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(littlesugar)
                    .addComponent(caramel)
                    .addComponent(nosugar)
                    .addComponent(halfsugar)
                    .addComponent(sweet)
                    .addComponent(cinnamon)
                    .addComponent(vanilla))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nosugar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(littlesugar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(halfsugar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sweet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(caramel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cinnamon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vanilla)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        list.setBackground(new java.awt.Color(204, 204, 204));
        list.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "------------------", "Cold:", "------------------", "Freddo Espresso", "Freddo Capuccino", "Ice Latte", "Ice Americano", "------------------", "Hot:", "------------------", "Espresso", "Capuccino", "Latte", "Americano", "Hot Chocolate", "------------------", "Tea:", "------------------", "Green Tea", "Black Tea", "Chamomille", "Red Clover", "Cinnamon", "Ginger", "Hibiscus", "------------------", "Water", "------------------", " ", "------------------", "Food:", "------------------", "Club Sandwich", "Tost", "Pizza" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(list);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 51));
        jLabel1.setText("MyCoffeeShop");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Unknown-2.png"))); // NOI18N

        jLabel7.setBackground(new java.awt.Color(51, 51, 51));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Unknown-2.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(jLabel2)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtqty, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(addbutton)
                                        .addGap(82, 82, 82)
                                        .addComponent(remover))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(jLabel3)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(resetbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(placeorder)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(392, 392, 392))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(47, 47, 47)
                            .addComponent(jLabel1)
                            .addGap(49, 49, 49)
                            .addComponent(jLabel7)
                            .addGap(357, 357, 357)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtqty, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addbutton)
                            .addComponent(remover))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetbutton)
                            .addComponent(placeorder))
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txttotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))))
        );

        jMenuBar1.setBackground(new java.awt.Color(0, 51, 204));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));

        jMenu1.setBackground(new java.awt.Color(255, 51, 51));
        jMenu1.setText("File");

        jMenuItem1.setText("INFO");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearSugarSelection() {
    nosugar.setSelected(false);
    littlesugar.setSelected(false);
    halfsugar.setSelected(false);
    sweet.setSelected(false);
    caramel.setSelected(false);
    cinnamon.setSelected(false);
    vanilla.setSelected(false);
}
        
    private void addbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonActionPerformed
        String product = list.getSelectedValue();
        
        if( product == "Freddo Espresso"){
            
            if (nosugar.isSelected() == true ){
                
                item="Freddo Espresso No Sugar        ";
                price=1.80;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Freddo Espresso Little Sugar       ";
                price=1.85;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Freddo Espresso Half Sugar        ";
                price=1.90;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Freddo Espresso Sweet      ";
                price=1.90;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Freddo Espresso with Caramel      ";
                price = 2.00;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Freddo Espresso with Cinnamon      ";
                price = 2.00;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Freddo Espresso with vanilla      ";
                price = 2.00;
            }
                
        }
        
        else if( product == "Freddo Capuccino"){
            
            if (nosugar.isSelected() == true ){
                
                item="Freddo Capuccino No Sugar        ";
                price=2.00;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Freddo Capuccino Little Sugar       ";
                price=2.05;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Freddo Capuccino Half Sugar        ";
                price=2.10;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Freddo Capuccino Sweet      ";
                price=2.10;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Freddo Capuccino with Caramel      ";
                price = 2.20;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Freddo Capuccino with Cinnamon      ";
                price = 2.20;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Freddo Capuccino with vanilla      ";
                price = 2.20;
            }
            
        }    
            
        else if( product == "Ice Latte"){
            
            if (nosugar.isSelected() == true ){
                
                item="Ice Latte No Sugar        ";
                price=2.30;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Ice Latte Little Sugar       ";
                price=2.35;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Ice Latte Half Sugar        ";
                price=2.40;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Ice Latte Sweet      ";
                price=2.40;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Ice Caramel Latte      ";
                price = 2.50;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Ice Cinnamon Latte      ";
                price = 2.50;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Ice Vanilla Latte      ";
                price = 2.50;
            }
        }
        
        else if( product == "Ice Americano"){
            
            if (nosugar.isSelected() == true ){
                
                item="Ice Americano No Sugar        ";
                price=1.80;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Ice Americano Little Sugar       ";
                price=1.85;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Ice Americano Half Sugar        ";
                price=1.90;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Ice Americano Sweet      ";
                price=1.90;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Ice Americano with Caramel      ";
                price = 2.00;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Ice Americano with Cinnamon      ";
                price = 2.00;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Ice Americano with vanilla      ";
                price = 2.00;
            }    
        }    
        
        else if( product == "Espresso"){
            
            if (nosugar.isSelected() == true ){
                
                item="Espresso No Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Espresso Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Espresso Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Espresso Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Espresso with Caramel      ";
                price = 1.60;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Espresso with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Espresso with vanilla      ";
                price = 1.70;
            }
        }
            
        else if( product == "Capuccino"){
            
            if (nosugar.isSelected() == true ){
                
                item="Capuccino No Sugar        ";
                price=1.80;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Capuccino Little Sugar       ";
                price=1.85;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Capuccino Half Sugar        ";
                price=1.90;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Capuccino Sweet      ";
                price=1.90;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Capuccino with Caramel      ";
                price = 2.00;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Capuccino with Cinnamon      ";
                price = 2.00;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Capuccino with vanilla      ";
                price = 2.00;
            }
               
        }
        
        else if (product == "Cold:"){
            item = null;
        }
        
        else if (product == "Hot:"){
            item = null;
        }
        
        else if (product == "Tea:"){
            item = null;
        }
        
        else if (product == "Food:"){
            item = null;
        }
        
        else if (product == "------------------"){
            item = null;
        }
        
        else if( product == "Latte"){
            
            if (nosugar.isSelected() == true ){
                
                item="Latte No Sugar        ";
                price=2.00;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Latte Little Sugar       ";
                price=2.05;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Latte with Half Sugar        ";
                price=2.10;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Latte Sweet      ";
                price=2.10;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Caramel Latte      ";
                price = 2.20;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Cinnamon Latte      ";
                price = 2.20;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Vanilla Latte      ";
                price = 2.20;
            }
                
        }
        
        
        else if( product == "Americano"){
            
            if (nosugar.isSelected() == true ){
                
                item="Americano No Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Americano with Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Americano with Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Americano Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Americano with Caramel      ";
                price = 1.70;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Americano with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Americano with vanilla      ";
                price = 1.70;
            }
                
        }
        
        else if( product == "Green Tea"){
            
            if (nosugar.isSelected() == true ){
                
                item="Green Tea without Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Green Tea with Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Green Tea with Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Green Tea Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Green Tea with Caramel      ";
                price = 1.70;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Green Tea with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Green Tea with Vanilla      ";
                price = 1.70;
            }
                
        }
        
        else if( product == "Black Tea"){
            
            if (nosugar.isSelected() == true ){
                
                item="Black Tea without Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Black Tea with Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Black Tea with Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Black Tea Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Black Tea with Caramel      ";
                price = 1.70;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Black Tea with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Black Teea with Vanilla      ";
                price = 1.70;
            }
                
        }
        
        else if( product == "Chamomille"){
            
            if (nosugar.isSelected() == true ){
                
                item="Chamomille Tea without Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Chamomille Tea with Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Chamomille Tea with Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Chamomille Tea Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Chamomille Tea with Caramel      ";
                price = 1.70;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Chamomille Tea with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Chamomille Tea with Vanilla      ";
                price = 1.70;
            }
                
        }
        
        
        else if (product == "Red Clover"){
            
            if (nosugar.isSelected() == true ){
                
                item="Red Clover Tea without Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Red Clover Tea with Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Red Clover Tea with Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Red Clover Tea Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Red Clover Tea with Caramel      ";
                price = 1.70;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Red Clover Tea with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Red Clover Teea with Vanilla      ";
                price = 1.70;
            }
        }    
        
        else if (product == "Cinnamon"){
            
            if (nosugar.isSelected() == true ){
                
                item="Cinnamon Tea without Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Cinnamon Tea with Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Cinnamon Tea with Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Cinnamon Tea Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Cinnamon Tea with Caramel      ";
                price = 1.70;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Cinnamon Tea with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Cinnamon Teea with Vanilla      ";
                price = 1.70;
            }
        }    
        
        else if (product == "Water"){
            
            item="Water                    ";
            price=0.50;
            
        }    
        
        else if (product == "Hot Chocolate"){
            
            item="Hot Chocolate                    ";
            price=3.50;
            
        }
        
        
        else if (product == "Ginger"){
            
            if (nosugar.isSelected() == true ){
                
                item="Ginger Tea without Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Ginger Tea with Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Ginger Tea with Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Ginger Tea Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Ginger Tea with Caramel      ";
                price = 1.70;
                
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Ginger Tea with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Ginger Teea with Vanilla      ";
                price = 1.70;
            }
        }    
        
        else if (product == "Hibiscus"){
            
            if (nosugar.isSelected() == true ){
                
                item="Ginger Tea without Sugar        ";
                price=1.50;
                
            }
                
            else if ( littlesugar.isSelected() == true){
                
                item="Hibiscus Tea with Little Sugar       ";
                price=1.55;
            }
            else if ( halfsugar.isSelected() == true){
                
                item="Hibiscus Tea with Half Sugar        ";
                price=1.60;
            }
            
            else if ( sweet.isSelected() == true){
                
                item="Hibiscus Tea Sweet      ";
                price=1.60;
            }
            
            else if( caramel.isSelected() == true){
                
                item = "Hibiscus Tea with Caramel      ";
                price = 1.70;
            }
            
            else if( cinnamon.isSelected() == true){
                
                item="Hibiscus Tea with Cinnamon      ";
                price = 1.70;
            }
            
            else if( vanilla.isSelected() == true){
                
                item = "Hibiscus Teea with Vanilla      ";
                price = 1.70;
            }
        }
        
        else if (product == "Tost"){
            
            item="Tost   ";
            price=2.00;
            
        }
        
        else if (product == "Pizza"){
            
            item="Pizza            ";
            price=3.50;
            
        } 
        
        else if (product == "Club Sandwich"){
            
            item="Club Sandwich         ";
            price=5.00;
            
            
        }
        
        
    int qty = Integer.parseInt(txtqty.getValue().toString());
    double tot = qty * price;   
    if (item != null && product!="-----"){
    model = (DefaultTableModel)jTable1.getModel();
    
    model.addRow(new Object[]
  
    {
        item,
        qty,
        price,
        tot
 
    });
    
    double sum = 0.00;
    
  
    for(int a=0; a<jTable1.getRowCount(); a++)
    {
    sum += Double.parseDouble(jTable1.getValueAt(a,3).toString());
    
    }
    
    String total = decimalFormat.format(sum);
    txttotal.setText(total);
    }
    list.clearSelection();
    clearSugarSelection();
    }                                         
    // TODO add your handling code here:


    private void removeActionPerformed(java.awt.event.ActionEvent evt) {                                       
        
    }//GEN-LAST:event_addbuttonActionPerformed

    private void nosugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nosugarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nosugarActionPerformed

    private void halfsugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halfsugarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_halfsugarActionPerformed

    private void placeorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeorderActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy_HH-mm-ss");
        Date now = new Date();
        String dateAndTimeString = sdf.format(now);
        File file = new File("ordersfolder/"+dateAndTimeString + ".txt");
        try {
        file.createNewFile();
        } catch (IOException ex) {    
        System.out.println("Error creating file: " + ex.getMessage());
        }
        
        
        
        //writes to file
        
        
        try {
            FileWriter fileWriter = new FileWriter("ordersfolder/"+dateAndTimeString + ".txt", true);
            fileWriter.write("Order:  " +dateAndTimeString+System.lineSeparator());
            fileWriter.write("Total :"+txttotal.getText()+System.lineSeparator());
            fileWriter.write("\n"+System.lineSeparator());
            fileWriter.write("Comments: "+sxolia.getText()+System.lineSeparator());
            fileWriter.write("\n\n"+System.lineSeparator());
            
            //fileWriter.write("Η σειρά των παρακάτω γραμμών είναι:"+System.lineSeparator());
            fileWriter.write("Product                  Quantity   Price  Total\n "+System.lineSeparator());
            for (int row = 0; row < jTable1.getRowCount(); row++) {
            for (int col = 0; col < jTable1.getColumnCount(); col++) {
                Object value = jTable1.getValueAt(row, col);
                fileWriter.write(value.toString() + "\t");
                }
                fileWriter.write(System.lineSeparator());
                }
            
            
            fileWriter.close();
        }catch (IOException e) {
        e.printStackTrace();
        }   
        
        
        

        
        
        //counts total sum ad sets it to text field
        model.setRowCount(0);
        double sum=0.00;
        for(int a=0; a<jTable1.getRowCount(); a++)
        {
            sum += Double.parseDouble(jTable1.getValueAt(a,3).toString());
    
        }
        String total=decimalFormat.format(sum);
        txttotal.setText(total);
        sxolia.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_placeorderActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
          File folder = new File("ordersfolder");
          //Runtime.getRuntime().exec("explorer.exe " + folder.getAbsolutePath());
          Desktop.getDesktop().open(folder);
        } catch (Exception ex) {
          ex.printStackTrace();
        }     // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void resetbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbuttonActionPerformed
        model.setRowCount(0);
        double sum=0.00;
        for (int a = 0; a < jTable1.getRowCount(); a++) {
    Object value = jTable1.getValueAt(a, 3);
    if (value != null) {
        sum += Double.parseDouble(value.toString());
    }
}

    
        String total=decimalFormat.format(sum);
        txttotal.setText(total);
        sxolia.setText("");
                // TODO add your handling code here:
    }//GEN-LAST:event_resetbuttonActionPerformed

    private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed
        double sum=0.00;
        model.removeRow(jTable1.getSelectedRow());
        for(int a=0; a<jTable1.getRowCount(); a++)
        {
            sum += Double.parseDouble(jTable1.getValueAt(a,3).toString());
    
        }
    
        String total=decimalFormat.format(sum);
        txttotal.setText(total);    // TODO add your handling code here:
    }//GEN-LAST:event_removerActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        infoframe info = new infoframe();
        info.show();   // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void caramelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caramelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caramelActionPerformed

    private void txttotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalActionPerformed

    

    
    
    
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JCafe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JCafe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JCafe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JCafe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JCafe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JCafe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JCafe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JCafe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JCafe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton addbutton;
    private javax.swing.JRadioButton caramel;
    private javax.swing.JRadioButton cinnamon;
    private javax.swing.JRadioButton halfsugar;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> list;
    private javax.swing.JRadioButton littlesugar;
    private javax.swing.JRadioButton nosugar;
    private javax.swing.JButton placeorder;
    private javax.swing.JButton remover;
    private javax.swing.JButton resetbutton;
    private javax.swing.JRadioButton sweet;
    private javax.swing.JTextArea sxolia;
    private javax.swing.JSpinner txtqty;
    private javax.swing.JTextField txttotal;
    private javax.swing.JRadioButton vanilla;
    // End of variables declaration//GEN-END:variables
}
